{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Footer.js","components/store/containers/Footer.js","components/store/actions/changeThemeAction.js","components/TodoApp.js","components/store/reducers/themeReducer.js","components/store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","this","props","todo","id","title","completed","type","checked","onChange","handleChane","onClick","deleteTodo","Todos","todos","map","AddTodo","state","onInputChange","e","setState","target","value","addTodo","preventDefault","action","onSubmit","placeholder","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","dispatch","payload","saveTheme","TodoApp","handleCheckBoxChane","axios","delete","then","filter","item","newTodo","post","response","data","get","params","_limit","initState","combineReducers","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6ad5e647.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component{\r\n      render(){\r\n            return(\r\n                  <header className=\"header-container\">\r\n                        <h1 className=\"header-title\">Simple Todo App</h1>\r\n                  </header>\r\n            )\r\n      }\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nclass TodoItem extends React.Component{\r\n      render(){\r\n            const {id,title,completed} = this.props.todo\r\n            return(\r\n                  <li className=\"todo-item\" >\r\n                        <input type=\"checkbox\" checked={completed}\r\n                        onChange={()=>this.props.handleChane(this.props.handleChane(id))}\r\n                        />\r\n                        <span className={ completed ?\"completed\":null} >{title}</span>\r\n                        <button onClick={()=>this.props.deleteTodo(id)} className=\"btn-style\">X</button>\r\n                  </li>\r\n                  \r\n            )\r\n      }\r\n\r\n}\r\n\r\nexport default TodoItem","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass Todos extends React.Component{\r\n      render(){\r\n            return(\r\n                  <div>\r\n                        <ul>\r\n                              {this.props.todos.map(todo => {\r\n                                    return <TodoItem key={todo.id} todo={todo} handleChane={this.props.handleChane} deleteTodo={this.props.deleteTodo} />\r\n                              })}\r\n                        </ul>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nexport default Todos","import React from \"react\";\r\n\r\n\r\nclass AddTodo extends React.Component{\r\n      state = {\r\n            title:\"\"\r\n      }\r\n      onInputChange = e =>{\r\n            this.setState({\r\n                  title:e.target.value\r\n            })\r\n      }\r\n      addTodo = e =>{\r\n            e.preventDefault()\r\n            this.props.addTodo(this.state.title)\r\n            this.setState({\r\n                  title:\"\"\r\n            })\r\n      }\r\n      render(){\r\n            return(\r\n                  <form action=\"\" className=\"form-container\" onSubmit={this.addTodo}  >\r\n                        <input type=\"text\" className=\"input-text\" placeholder=\"Add Todo...\" value={this.state.title} onChange={this.onInputChange} />\r\n                        <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n                  </form>\r\n            )\r\n      }\r\n}\r\n\r\nexport default AddTodo","import React from \"react\";\r\nconst RED = \"#ff0000\";\r\nconst BLUE = \"#0000ff\";\r\nconst GRAY = \"#678c89\";\r\nclass Footer extends React.Component {\r\nconstructor(props){\r\nsuper(props)\r\nthis.submitThemeColor = this.submitThemeColor.bind(this)\r\n}\r\nsubmitThemeColor(color) {\r\n      if(color){\r\n            console.log('handleChangeTheme')\r\n            this.props.saveColorTheme(color)\r\n      }\r\n};\r\n\r\ncomponentWillReceiveProps(nextprops){\r\n      console.log('UNSAFE_componentWillReceiveProps: ' +JSON.stringify(nextprops))\r\n      document\r\n            .documentElement\r\n            .style\r\n            .setProperty(\"--main-color\", nextprops.themeColor.color);\r\n}\r\n\r\n\r\nrender() {\r\n      return (\r\n      <div className=\"footer\">\r\n            <div className=\"vertical-center\">\r\n                  <span>Choose Theme </span>\r\n                  <button onClick={()=>this.submitThemeColor(RED)} className=\"\r\n                  dot red\"/>\r\n                  <button onClick={()=>this.submitThemeColor(BLUE)} className=\r\n                  \"dot blue\"/>\r\n                  <button onClick={()=>this.submitThemeColor(GRAY)} className=\r\n                  \"dot gray\"/>\r\n            </div>\r\n      </div>\r\n);\r\n}\r\n};\r\nexport default Footer;","import {connect} from 'react-redux'\r\nimport {saveTheme}  from '../actions/changeThemeAction'\r\nimport Footer from '../../layout/Footer'\r\n\r\nconst mapDisPathchToProps = dispatch => ({\r\n      dispatch,\r\n      saveColorTheme : color => dispatch(saveTheme(color))\r\n})\r\n\r\nfunction mapStateToProps(state){\r\n      return {\r\n            themeColor:state.color\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisPathchToProps)(Footer)","export const saveTheme = color =>({\r\n      type:\"CHANGE_THEME\",\r\n      payload:{\r\n            color\r\n      }\r\n})","import React from \"react\";\r\nimport Header from './layout/Header'\r\nimport Todos from \"./Todos\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport axios from 'axios'\r\nimport Footer from \"./store/containers/Footer\";\r\n\r\nclass TodoApp extends React.Component{\r\n\r\n      constructor(props){\r\n            super(props)\r\n            this.state = {\r\n                  todos :[\r\n                        \r\n                  ]\r\n            }\r\n      }\r\n      handleCheckBoxChane=(id)=>{\r\n            this.setState({\r\n                  todos: this.state.todos.map((todo)=>{\r\n                        if(todo.id===id){\r\n                              todo.completed = !todo.completed\r\n                        }\r\n                        return todo\r\n                  })\r\n            })\r\n      }\r\n      deleteTodo=(id)=>{\r\n            axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(()=>{\r\n                  this.setState({\r\n                        todos: this.state.todos.filter((item=>{\r\n                              return item.id !== id\r\n                        }))\r\n                  })\r\n            })\r\n      }\r\n      addTodo= title =>{\r\n            const newTodo={\r\n                  title:title,\r\n                  completed:false\r\n            }\r\n            axios.post('https://jsonplaceholder.typicode.com/todos',newTodo)\r\n                  .then(response=>{\r\n                        this.setState({\r\n                              todos:[...this.state.todos,response.data]\r\n                        })\r\n                  })\r\n      }\r\n      componentDidMount(){\r\n            //tạo get request để lấy danh sách todo\r\n            const config={\r\n                  params:{\r\n                        _limit:5\r\n                  }\r\n            }\r\n            axios.get('https://jsonplaceholder.typicode.com/todos',config)\r\n                  .then(response => this.setState({todos:response.data}))\r\n      }\r\n      render(){\r\n            return(\r\n                  <div className=\"container\">\r\n                       <Header />\r\n                       <AddTodo addTodo={this.addTodo} />\r\n                       <Todos todos={this.state.todos} handleChane={this.handleCheckBoxChane}\r\n                       deleteTodo={this.deleteTodo}\r\n                        />\r\n                        <Footer/>\r\n                  </div>\r\n\r\n            )\r\n      }\r\n}\r\nexport default TodoApp\r\n","let initState = {\r\n      color:\"#FFF\"\r\n}\r\nexport default function themeReducer(state = initState,action){\r\n      switch(action.type){\r\n            case 'CHANGE_THEME':{\r\n                  console.log('themeReducer:'+ JSON.stringify(state))\r\n                  return Object.assign({},state,{\r\n                        color:action.payload.color\r\n                  })\r\n            }\r\n            default:{\r\n                  return initState\r\n            }\r\n      }\r\n}","import { combineReducers } from \"redux\";\r\nimport color from './themeReducer'\r\n\r\nexport default combineReducers({color})","import React from 'react'\r\nimport  ReactDOM  from 'react-dom'\r\nimport TodoApp from './components/TodoApp'\r\nimport './App.css'\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './components/store/reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n      <Provider store={store} >\r\n            <TodoApp/>\r\n      </Provider>\r\n        \r\n      ,document.getElementById('root')\r\n)"],"sourceRoot":""}